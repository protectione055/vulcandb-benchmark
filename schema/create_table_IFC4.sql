CREATE TABLE IF NOT EXISTS IfcActionRequest (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"PredefinedType" TEXT,"Status" TEXT,"LongDescription" TEXT);
CREATE TABLE IF NOT EXISTS IfcActor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"TheActor" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcActorRole (id INTEGER PRIMARY KEY, "Role" TEXT NOT NULL,"UserDefinedRole" TEXT,"Description" TEXT);
CREATE TABLE IF NOT EXISTS IfcActuator (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcActuatorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAdvancedBrep (id INTEGER PRIMARY KEY, "Outer" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAdvancedBrepWithVoids (id INTEGER PRIMARY KEY, "Outer" INTEGER NOT NULL,"Voids" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAdvancedFace (id INTEGER PRIMARY KEY, "Bounds" TEXT NOT NULL,"FaceSurface" INTEGER NOT NULL,"SameSense" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAirTerminal (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcAirTerminalBox (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcAirTerminalBoxType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAirTerminalType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAirToAirHeatRecovery (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcAirToAirHeatRecoveryType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAlarm (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcAlarmType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAnnotation (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER);
CREATE TABLE IF NOT EXISTS IfcAnnotationFillArea (id INTEGER PRIMARY KEY, "OuterBoundary" INTEGER NOT NULL,"InnerBoundaries" TEXT);
CREATE TABLE IF NOT EXISTS IfcApplication (id INTEGER PRIMARY KEY, "ApplicationDeveloper" INTEGER NOT NULL,"Version" TEXT NOT NULL,"ApplicationFullName" TEXT NOT NULL,"ApplicationIdentifier" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAppliedValue (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"AppliedValue?: <select IfcAppliedValueSelect: (<entity IfcMeasureWithUnit> | <entity IfcReference> | <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"UnitBasis" INTEGER,"ApplicableDate" TEXT,"FixedUntilDate" TEXT,"Category" TEXT,"Condition" TEXT,"ArithmeticOperator" TEXT,"Components" TEXT);
CREATE TABLE IF NOT EXISTS IfcApproval (id INTEGER PRIMARY KEY, "Identifier" TEXT,"Name" TEXT,"Description" TEXT,"TimeOfApproval" TEXT,"Status" TEXT,"Level" TEXT,"Qualifier" TEXT,"RequestingApproval" TEXT,"GivingApproval" TEXT);
CREATE TABLE IF NOT EXISTS IfcApprovalRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingApproval" INTEGER NOT NULL,"RelatedApprovals" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcArbitraryClosedProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"OuterCurve" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcArbitraryOpenProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Curve" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcArbitraryProfileDefWithVoids (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"OuterCurve" INTEGER NOT NULL,"InnerCurves" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAsset (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"OriginalValue" INTEGER,"CurrentValue" INTEGER,"TotalReplacementCost" INTEGER,"Owner" TEXT,"User" TEXT,"ResponsiblePerson" INTEGER,"IncorporationDate" TEXT,"DepreciatedValue" INTEGER);
CREATE TABLE IF NOT EXISTS IfcAsymmetricIShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"BottomFlangeWidth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"OverallDepth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WebThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"BottomFlangeThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"BottomFlangeFilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"TopFlangeWidth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TopFlangeThickness?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TopFlangeFilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"BottomFlangeEdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"BottomFlangeSlope" TEXT,"TopFlangeEdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"TopFlangeSlope" TEXT);
CREATE TABLE IF NOT EXISTS IfcAudioVisualAppliance (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcAudioVisualApplianceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcAxis1Placement (id INTEGER PRIMARY KEY, "Location" INTEGER NOT NULL,"Axis" INTEGER);
CREATE TABLE IF NOT EXISTS IfcAxis2Placement2D (id INTEGER PRIMARY KEY, "Location" INTEGER NOT NULL,"RefDirection" INTEGER);
CREATE TABLE IF NOT EXISTS IfcAxis2Placement3D (id INTEGER PRIMARY KEY, "Location" INTEGER NOT NULL,"Axis" INTEGER,"RefDirection" INTEGER);
CREATE TABLE IF NOT EXISTS IfcBeam (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcBeamStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcBeamType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBlobTexture (id INTEGER PRIMARY KEY, "RepeatS" TEXT NOT NULL,"RepeatT" TEXT NOT NULL,"Mode" TEXT,"TextureTransform" INTEGER,"Parameter" TEXT,"RasterFormat" TEXT NOT NULL,"RasterCode" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBlock (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"XLength: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YLength: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ZLength: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBoiler (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcBoilerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBooleanClippingResult (id INTEGER PRIMARY KEY, "Operator" TEXT NOT NULL,"FirstOperand" TEXT NOT NULL,"SecondOperand" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBooleanResult (id INTEGER PRIMARY KEY, "Operator" TEXT NOT NULL,"FirstOperand" TEXT NOT NULL,"SecondOperand" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBoundaryCurve (id INTEGER PRIMARY KEY, "Segments" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBoundaryEdgeCondition (id INTEGER PRIMARY KEY, "Name" TEXT,"TranslationalStiffnessByLengthX" TEXT,"TranslationalStiffnessByLengthY" TEXT,"TranslationalStiffnessByLengthZ" TEXT,"RotationalStiffnessByLengthX" TEXT,"RotationalStiffnessByLengthY" TEXT,"RotationalStiffnessByLengthZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcBoundaryFaceCondition (id INTEGER PRIMARY KEY, "Name" TEXT,"TranslationalStiffnessByAreaX" TEXT,"TranslationalStiffnessByAreaY" TEXT,"TranslationalStiffnessByAreaZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcBoundaryNodeCondition (id INTEGER PRIMARY KEY, "Name" TEXT,"TranslationalStiffnessX" TEXT,"TranslationalStiffnessY" TEXT,"TranslationalStiffnessZ" TEXT,"RotationalStiffnessX" TEXT,"RotationalStiffnessY" TEXT,"RotationalStiffnessZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcBoundaryNodeConditionWarping (id INTEGER PRIMARY KEY, "Name" TEXT,"TranslationalStiffnessX" TEXT,"TranslationalStiffnessY" TEXT,"TranslationalStiffnessZ" TEXT,"RotationalStiffnessX" TEXT,"RotationalStiffnessY" TEXT,"RotationalStiffnessZ" TEXT,"WarpingStiffness" TEXT);
CREATE TABLE IF NOT EXISTS IfcBoundingBox (id INTEGER PRIMARY KEY, "Corner" INTEGER NOT NULL,"XDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ZDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBoxedHalfSpace (id INTEGER PRIMARY KEY, "BaseSurface" INTEGER NOT NULL,"AgreementFlag" TEXT NOT NULL,"Enclosure" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBSplineCurveWithKnots (id INTEGER PRIMARY KEY, "Degree" TEXT NOT NULL,"ControlPointsList" TEXT NOT NULL,"CurveForm" TEXT NOT NULL,"ClosedCurve" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL,"KnotMultiplicities" TEXT NOT NULL,"Knots" TEXT NOT NULL,"KnotSpec" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBSplineSurfaceWithKnots (id INTEGER PRIMARY KEY, "UDegree" TEXT NOT NULL,"VDegree" TEXT NOT NULL,"ControlPointsList" TEXT NOT NULL,"SurfaceForm" TEXT NOT NULL,"UClosed" TEXT NOT NULL,"VClosed" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL,"UMultiplicities" TEXT NOT NULL,"VMultiplicities" TEXT NOT NULL,"UKnots" TEXT NOT NULL,"VKnots" TEXT NOT NULL,"KnotSpec" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBuilding (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"LongName" TEXT,"CompositionType" TEXT,"ElevationOfRefHeight" TEXT,"ElevationOfTerrain" TEXT,"BuildingAddress" INTEGER);
CREATE TABLE IF NOT EXISTS IfcBuildingElementPart (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcBuildingElementPartType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBuildingElementProxy (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcBuildingElementProxyType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcBuildingStorey (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"LongName" TEXT,"CompositionType" TEXT,"Elevation" TEXT);
CREATE TABLE IF NOT EXISTS IfcBuildingSystem (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"PredefinedType" TEXT,"LongName" TEXT);
CREATE TABLE IF NOT EXISTS IfcBurner (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcBurnerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCableCarrierFitting (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCableCarrierFittingType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCableCarrierSegment (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCableCarrierSegmentType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCableFitting (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCableFittingType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCableSegment (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCableSegmentType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCartesianPoint (id INTEGER PRIMARY KEY, "Coordinates" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCartesianPointList2D (id INTEGER PRIMARY KEY, "CoordList" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCartesianPointList3D (id INTEGER PRIMARY KEY, "CoordList" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCartesianTransformationOperator2D (id INTEGER PRIMARY KEY, "Axis1" INTEGER,"Axis2" INTEGER,"LocalOrigin" INTEGER NOT NULL,"Scale" TEXT);
CREATE TABLE IF NOT EXISTS IfcCartesianTransformationOperator2DnonUniform (id INTEGER PRIMARY KEY, "Axis1" INTEGER,"Axis2" INTEGER,"LocalOrigin" INTEGER NOT NULL,"Scale" TEXT,"Scale2" TEXT);
CREATE TABLE IF NOT EXISTS IfcCartesianTransformationOperator3D (id INTEGER PRIMARY KEY, "Axis1" INTEGER,"Axis2" INTEGER,"LocalOrigin" INTEGER NOT NULL,"Scale" TEXT,"Axis3" INTEGER);
CREATE TABLE IF NOT EXISTS IfcCartesianTransformationOperator3DnonUniform (id INTEGER PRIMARY KEY, "Axis1" INTEGER,"Axis2" INTEGER,"LocalOrigin" INTEGER NOT NULL,"Scale" TEXT,"Axis3" INTEGER,"Scale2" TEXT,"Scale3" TEXT);
CREATE TABLE IF NOT EXISTS IfcCenterLineProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Curve" INTEGER NOT NULL,"Thickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcChiller (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcChillerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcChimney (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcChimneyType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCircle (id INTEGER PRIMARY KEY, "Position" TEXT NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCircleHollowProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WallThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCircleProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCivilElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcCivilElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT);
CREATE TABLE IF NOT EXISTS IfcClassification (id INTEGER PRIMARY KEY, "Source" TEXT,"Edition" TEXT,"EditionDate" TEXT,"Name" TEXT NOT NULL,"Description" TEXT,"Location" TEXT,"ReferenceTokens" TEXT);
CREATE TABLE IF NOT EXISTS IfcClassificationReference (id INTEGER PRIMARY KEY, "Location" TEXT,"Identification" TEXT,"Name" TEXT,"ReferencedSource" TEXT,"Description" TEXT,"Sort" TEXT);
CREATE TABLE IF NOT EXISTS IfcClosedShell (id INTEGER PRIMARY KEY, "CfsFaces" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCoil (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCoilType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcColourRgb (id INTEGER PRIMARY KEY, "Name" TEXT,"Red: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Green: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Blue: <type IfcNormalisedRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcColourRgbList (id INTEGER PRIMARY KEY, "ColourList: <list [1:?] of <list [3:3] of <type IfcNormalisedRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcColumn (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcColumnStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcColumnType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCommunicationsAppliance (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCommunicationsApplianceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcComplexProperty (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"UsageName" TEXT NOT NULL,"HasProperties" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcComplexPropertyTemplate (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"UsageName" TEXT,"TemplateType" TEXT,"HasPropertyTemplates" TEXT);
CREATE TABLE IF NOT EXISTS IfcCompositeCurve (id INTEGER PRIMARY KEY, "Segments" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCompositeCurveOnSurface (id INTEGER PRIMARY KEY, "Segments" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCompositeCurveSegment (id INTEGER PRIMARY KEY, "Transition" TEXT NOT NULL,"SameSense" TEXT NOT NULL,"ParentCurve" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCompositeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Profiles" TEXT NOT NULL,"Label" TEXT);
CREATE TABLE IF NOT EXISTS IfcCompressor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCompressorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCondenser (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCondenserType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcConnectedFaceSet (id INTEGER PRIMARY KEY, "CfsFaces" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcConnectionCurveGeometry (id INTEGER PRIMARY KEY, "CurveOnRelatingElement" TEXT NOT NULL,"CurveOnRelatedElement" TEXT);
CREATE TABLE IF NOT EXISTS IfcConnectionPointEccentricity (id INTEGER PRIMARY KEY, "PointOnRelatingElement" TEXT NOT NULL,"PointOnRelatedElement" TEXT,"EccentricityInX" TEXT,"EccentricityInY" TEXT,"EccentricityInZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcConnectionPointGeometry (id INTEGER PRIMARY KEY, "PointOnRelatingElement" TEXT NOT NULL,"PointOnRelatedElement" TEXT);
CREATE TABLE IF NOT EXISTS IfcConnectionSurfaceGeometry (id INTEGER PRIMARY KEY, "SurfaceOnRelatingElement" TEXT NOT NULL,"SurfaceOnRelatedElement" TEXT);
CREATE TABLE IF NOT EXISTS IfcConnectionVolumeGeometry (id INTEGER PRIMARY KEY, "VolumeOnRelatingElement" TEXT NOT NULL,"VolumeOnRelatedElement" TEXT);
CREATE TABLE IF NOT EXISTS IfcConstructionEquipmentResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Usage" INTEGER,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcConstructionEquipmentResourceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ResourceType" TEXT,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcConstructionMaterialResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Usage" INTEGER,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcConstructionMaterialResourceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ResourceType" TEXT,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcConstructionProductResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Usage" INTEGER,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcConstructionProductResourceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ResourceType" TEXT,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcContextDependentUnit (id INTEGER PRIMARY KEY, "Dimensions" INTEGER NOT NULL,"UnitType" TEXT NOT NULL,"Name" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcController (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcControllerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcConversionBasedUnit (id INTEGER PRIMARY KEY, "Dimensions" INTEGER NOT NULL,"UnitType" TEXT NOT NULL,"Name" TEXT NOT NULL,"ConversionFactor" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcConversionBasedUnitWithOffset (id INTEGER PRIMARY KEY, "Dimensions" INTEGER NOT NULL,"UnitType" TEXT NOT NULL,"Name" TEXT NOT NULL,"ConversionFactor" INTEGER NOT NULL,"ConversionOffset" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCooledBeam (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCooledBeamType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCoolingTower (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCoolingTowerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCostItem (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"PredefinedType" TEXT,"CostValues" TEXT,"CostQuantities" TEXT);
CREATE TABLE IF NOT EXISTS IfcCostSchedule (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"PredefinedType" TEXT,"Status" TEXT,"SubmittedOn" TEXT,"UpdateDate" TEXT);
CREATE TABLE IF NOT EXISTS IfcCostValue (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"AppliedValue?: <select IfcAppliedValueSelect: (<entity IfcMeasureWithUnit> | <entity IfcReference> | <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"UnitBasis" INTEGER,"ApplicableDate" TEXT,"FixedUntilDate" TEXT,"Category" TEXT,"Condition" TEXT,"ArithmeticOperator" TEXT,"Components" TEXT);
CREATE TABLE IF NOT EXISTS IfcCovering (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCoveringType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCrewResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Usage" INTEGER,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCrewResourceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ResourceType" TEXT,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCsgSolid (id INTEGER PRIMARY KEY, "TreeRootExpression" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"Width: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WallThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"Girth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"InternalFilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCurrencyRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingMonetaryUnit" INTEGER NOT NULL,"RelatedMonetaryUnit" INTEGER NOT NULL,"ExchangeRate: <type IfcPositiveRatioMeasure" TEXT NOT NULL,"RateDateTime" TEXT,"RateSource" INTEGER);
CREATE TABLE IF NOT EXISTS IfcCurtainWall (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcCurtainWallType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCurveBoundedPlane (id INTEGER PRIMARY KEY, "BasisSurface" INTEGER NOT NULL,"OuterBoundary" INTEGER NOT NULL,"InnerBoundaries" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCurveBoundedSurface (id INTEGER PRIMARY KEY, "BasisSurface" INTEGER NOT NULL,"Boundaries" TEXT NOT NULL,"ImplicitOuter" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCurveStyle (id INTEGER PRIMARY KEY, "Name" TEXT,"CurveFont" TEXT,"CurveWidth?: <select IfcSizeSelect: (<type IfcDescriptiveMeasure: <string>> | <type IfcLengthMeasure: <real>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositiveRatioMeasure" TEXT NOT NULL,"CurveColour" TEXT,"ModelOrDraughting" TEXT);
CREATE TABLE IF NOT EXISTS IfcCurveStyleFont (id INTEGER PRIMARY KEY, "Name" TEXT,"PatternList" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCurveStyleFontAndScaling (id INTEGER PRIMARY KEY, "Name" TEXT,"CurveFont" TEXT NOT NULL,"CurveFontScaling: <type IfcPositiveRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCurveStyleFontPattern (id INTEGER PRIMARY KEY, "VisibleSegmentLength" TEXT NOT NULL,"InvisibleSegmentLength: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcCylindricalSurface (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDamper (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDamperType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDerivedProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"ParentProfile" INTEGER NOT NULL,"Operator" INTEGER NOT NULL,"Label" TEXT);
CREATE TABLE IF NOT EXISTS IfcDerivedUnit (id INTEGER PRIMARY KEY, "Elements" TEXT NOT NULL,"UnitType" TEXT NOT NULL,"UserDefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDerivedUnitElement (id INTEGER PRIMARY KEY, "Unit" INTEGER NOT NULL,"Unknown" TEXT);
CREATE TABLE IF NOT EXISTS IfcDimensionalExponents (id INTEGER PRIMARY KEY, "Unknown" TEXT,"Unknown" TEXT,"Unknown" TEXT,"Unknown" TEXT,"Unknown" TEXT,"Unknown" TEXT,"Unknown" TEXT);
CREATE TABLE IF NOT EXISTS IfcDirection (id INTEGER PRIMARY KEY, "DirectionRatios" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDiscreteAccessory (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDiscreteAccessoryType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDistributionChamberElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionChamberElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDistributionCircuit (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"LongName" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionControlElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionFlowElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionPort (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"FlowDirection" TEXT,"PredefinedType" TEXT,"SystemType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDistributionSystem (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"LongName" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDocumentInformation (id INTEGER PRIMARY KEY, "Identification" TEXT NOT NULL,"Name" TEXT NOT NULL,"Description" TEXT,"Location" TEXT,"Purpose" TEXT,"IntendedUse" TEXT,"Scope" TEXT,"Revision" TEXT,"DocumentOwner" TEXT,"Editors" TEXT,"CreationTime" TEXT,"LastRevisionTime" TEXT,"ElectronicFormat" TEXT,"ValidFrom" TEXT,"ValidUntil" TEXT,"Confidentiality" TEXT,"Status" TEXT);
CREATE TABLE IF NOT EXISTS IfcDocumentInformationRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingDocument" INTEGER NOT NULL,"RelatedDocuments" TEXT NOT NULL,"RelationshipType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDocumentReference (id INTEGER PRIMARY KEY, "Location" TEXT,"Identification" TEXT,"Name" TEXT,"Description" TEXT,"ReferencedDocument" INTEGER);
CREATE TABLE IF NOT EXISTS IfcDoor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"OverallHeight?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"OverallWidth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT,"OperationType" TEXT,"UserDefinedOperationType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDoorLiningProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"LiningDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"LiningThickness?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"ThresholdDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ThresholdThickness?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"TransomThickness?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"TransomOffset" TEXT,"LiningOffset" TEXT,"ThresholdOffset" TEXT,"CasingThickness?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"CasingDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ShapeAspectStyle" INTEGER,"LiningToPanelOffsetX" TEXT,"LiningToPanelOffsetY" TEXT);
CREATE TABLE IF NOT EXISTS IfcDoorPanelProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"PanelDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PanelOperation" TEXT NOT NULL,"PanelWidth?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"PanelPosition" TEXT NOT NULL,"ShapeAspectStyle" INTEGER);
CREATE TABLE IF NOT EXISTS IfcDoorStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"OverallHeight?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"OverallWidth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT,"OperationType" TEXT,"UserDefinedOperationType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDoorStyle (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"OperationType" TEXT NOT NULL,"ConstructionType" TEXT NOT NULL,"ParameterTakesPrecedence" TEXT NOT NULL,"Sizeable" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDoorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"OperationType" TEXT NOT NULL,"ParameterTakesPrecedence" TEXT,"UserDefinedOperationType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDraughtingPreDefinedColour (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDraughtingPreDefinedCurveFont (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDuctFitting (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDuctFittingType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDuctSegment (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDuctSegmentType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcDuctSilencer (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcDuctSilencerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEdge (id INTEGER PRIMARY KEY, "EdgeStart" INTEGER NOT NULL,"EdgeEnd" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEdgeCurve (id INTEGER PRIMARY KEY, "EdgeStart" INTEGER NOT NULL,"EdgeEnd" INTEGER NOT NULL,"EdgeGeometry" INTEGER NOT NULL,"SameSense" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEdgeLoop (id INTEGER PRIMARY KEY, "EdgeList" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElectricAppliance (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElectricApplianceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElectricDistributionBoard (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElectricDistributionBoardType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElectricFlowStorageDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElectricFlowStorageDeviceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElectricGenerator (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElectricGeneratorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElectricMotor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElectricMotorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElectricTimeControl (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElectricTimeControlType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElementAssembly (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"AssemblyPlace" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcElementAssemblyType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcElementQuantity (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"MethodOfMeasurement" TEXT,"Quantities" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEllipse (id INTEGER PRIMARY KEY, "Position" TEXT NOT NULL,"SemiAxis1: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"SemiAxis2: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEllipseProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"SemiAxis1: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"SemiAxis2: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEnergyConversionDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcEngine (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcEngineType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEvaporativeCooler (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcEvaporativeCoolerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEvaporator (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcEvaporatorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcEvent (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"PredefinedType" TEXT,"EventTriggerType" TEXT,"UserDefinedEventTriggerType" TEXT,"EventOccurenceTime" INTEGER);
CREATE TABLE IF NOT EXISTS IfcEventTime (id INTEGER PRIMARY KEY, "Name" TEXT,"DataOrigin" TEXT,"UserDefinedDataOrigin" TEXT,"ActualDate" TEXT,"EarlyDate" TEXT,"LateDate" TEXT,"ScheduleDate" TEXT);
CREATE TABLE IF NOT EXISTS IfcEventType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ProcessType" TEXT,"PredefinedType" TEXT NOT NULL,"EventTriggerType" TEXT NOT NULL,"UserDefinedEventTriggerType" TEXT);
CREATE TABLE IF NOT EXISTS IfcExternallyDefinedHatchStyle (id INTEGER PRIMARY KEY, "Location" TEXT,"Identification" TEXT,"Name" TEXT);
CREATE TABLE IF NOT EXISTS IfcExternallyDefinedSurfaceStyle (id INTEGER PRIMARY KEY, "Location" TEXT,"Identification" TEXT,"Name" TEXT);
CREATE TABLE IF NOT EXISTS IfcExternallyDefinedTextFont (id INTEGER PRIMARY KEY, "Location" TEXT,"Identification" TEXT,"Name" TEXT);
CREATE TABLE IF NOT EXISTS IfcExternalReferenceRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingReference" INTEGER NOT NULL,"RelatedResourceObjects" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcExternalSpatialElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"LongName" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcExtrudedAreaSolid (id INTEGER PRIMARY KEY, "SweptArea" INTEGER NOT NULL,"Position" INTEGER,"ExtrudedDirection" INTEGER NOT NULL,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcExtrudedAreaSolidTapered (id INTEGER PRIMARY KEY, "SweptArea" INTEGER NOT NULL,"Position" INTEGER,"ExtrudedDirection" INTEGER NOT NULL,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"EndSweptArea" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFace (id INTEGER PRIMARY KEY, "Bounds" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFaceBasedSurfaceModel (id INTEGER PRIMARY KEY, "FbsmFaces" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFaceBound (id INTEGER PRIMARY KEY, "Bound" INTEGER NOT NULL,"Orientation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFaceOuterBound (id INTEGER PRIMARY KEY, "Bound" INTEGER NOT NULL,"Orientation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFaceSurface (id INTEGER PRIMARY KEY, "Bounds" TEXT NOT NULL,"FaceSurface" INTEGER NOT NULL,"SameSense" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFacetedBrep (id INTEGER PRIMARY KEY, "Outer" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFacetedBrepWithVoids (id INTEGER PRIMARY KEY, "Outer" INTEGER NOT NULL,"Voids" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFailureConnectionCondition (id INTEGER PRIMARY KEY, "Name" TEXT,"TensionFailureX" TEXT,"TensionFailureY" TEXT,"TensionFailureZ" TEXT,"CompressionFailureX" TEXT,"CompressionFailureY" TEXT,"CompressionFailureZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcFan (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFanType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFastener (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFastenerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFillAreaStyle (id INTEGER PRIMARY KEY, "Name" TEXT,"FillStyles" TEXT NOT NULL,"ModelorDraughting" TEXT);
CREATE TABLE IF NOT EXISTS IfcFillAreaStyleHatching (id INTEGER PRIMARY KEY, "HatchLineAppearance" INTEGER NOT NULL,"StartOfNextHatchLine: <select IfcHatchLineDistanceSelect: (<type IfcPositiveLengthMeasure" TEXT NOT NULL,"PointOfReferenceHatchLine" INTEGER,"PatternStart" INTEGER,"HatchLineAngle" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFillAreaStyleTiles (id INTEGER PRIMARY KEY, "TilingPattern" TEXT NOT NULL,"Tiles" TEXT NOT NULL,"TilingScale: <type IfcPositiveRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFilter (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFilterType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFireSuppressionTerminal (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFireSuppressionTerminalType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFixedReferenceSweptAreaSolid (id INTEGER PRIMARY KEY, "SweptArea" INTEGER NOT NULL,"Position" INTEGER,"Directrix" INTEGER NOT NULL,"StartParam" TEXT,"EndParam" TEXT,"FixedReference" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFlowController (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowFitting (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowInstrument (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowInstrumentType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFlowMeter (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowMeterType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFlowMovingDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowSegment (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowStorageDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowTerminal (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFlowTreatmentDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFooting (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFootingType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcFurnishingElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcFurnishingElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFurniture (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcFurnitureType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"AssemblyPlace" TEXT NOT NULL,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcGeographicElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcGeographicElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcGeometricCurveSet (id INTEGER PRIMARY KEY, "Elements" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcGeometricRepresentationContext (id INTEGER PRIMARY KEY, "ContextIdentifier" TEXT,"ContextType" TEXT,"CoordinateSpaceDimension" TEXT NOT NULL,"Precision" TEXT,"WorldCoordinateSystem" TEXT NOT NULL,"TrueNorth" INTEGER);
CREATE TABLE IF NOT EXISTS IfcGeometricRepresentationSubContext (id INTEGER PRIMARY KEY, "ContextIdentifier" TEXT,"ContextType" TEXT,"CoordinateSpaceDimension" TEXT NOT NULL,"Precision" TEXT,"WorldCoordinateSystem" TEXT NOT NULL,"TrueNorth" INTEGER,"ParentContext" INTEGER NOT NULL,"TargetScale?: <type IfcPositiveRatioMeasure" TEXT NOT NULL,"TargetView" TEXT NOT NULL,"UserDefinedTargetView" TEXT);
CREATE TABLE IF NOT EXISTS IfcGeometricSet (id INTEGER PRIMARY KEY, "Elements" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcGrid (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"UAxes" TEXT NOT NULL,"VAxes" TEXT NOT NULL,"WAxes" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcGridAxis (id INTEGER PRIMARY KEY, "AxisTag" TEXT,"AxisCurve" INTEGER NOT NULL,"SameSense" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcGridPlacement (id INTEGER PRIMARY KEY, "PlacementLocation" INTEGER NOT NULL,"PlacementRefDirection" TEXT);
CREATE TABLE IF NOT EXISTS IfcGroup (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT);
CREATE TABLE IF NOT EXISTS IfcHalfSpaceSolid (id INTEGER PRIMARY KEY, "BaseSurface" INTEGER NOT NULL,"AgreementFlag" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcHeatExchanger (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcHeatExchangerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcHumidifier (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcHumidifierType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcImageTexture (id INTEGER PRIMARY KEY, "RepeatS" TEXT NOT NULL,"RepeatT" TEXT NOT NULL,"Mode" TEXT,"TextureTransform" INTEGER,"Parameter" TEXT,"URLReference" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIndexedColourMap (id INTEGER PRIMARY KEY, "MappedTo" INTEGER NOT NULL,"Opacity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Colours" INTEGER NOT NULL,"ColourIndex: <list [1:?] of <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIndexedPolyCurve (id INTEGER PRIMARY KEY, "Points" INTEGER NOT NULL,"Segments?: <list [1:?] of <select IfcSegmentIndexSelect: (<type IfcArcIndex: <list [3:3] of <type IfcPositiveInteger: <type IfcInteger: <integer>>>>> | <type IfcLineIndex: <list [2:?] of <type IfcPositiveInteger" TEXT NOT NULL,"SelfIntersect" TEXT);
CREATE TABLE IF NOT EXISTS IfcIndexedPolygonalFace (id INTEGER PRIMARY KEY, "CoordIndex: <list [3:?] of <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIndexedPolygonalFaceWithVoids (id INTEGER PRIMARY KEY, "CoordIndex: <list [3:?] of <type IfcPositiveInteger" TEXT NOT NULL,"InnerCoordIndices: <list [1:?] of <list [3:?] of <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIndexedTriangleTextureMap (id INTEGER PRIMARY KEY, "Maps" TEXT NOT NULL,"MappedTo" INTEGER NOT NULL,"TexCoords" INTEGER NOT NULL,"TexCoordIndex?: <list [1:?] of <list [3:3] of <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcInterceptor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcInterceptorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIntersectionCurve (id INTEGER PRIMARY KEY, "Curve3D" INTEGER NOT NULL,"AssociatedGeometry" TEXT NOT NULL,"MasterRepresentation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcInventory (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"PredefinedType" TEXT,"Jurisdiction" TEXT,"ResponsiblePersons" TEXT,"LastUpdateDate" TEXT,"CurrentValue" INTEGER,"OriginalValue" INTEGER);
CREATE TABLE IF NOT EXISTS IfcIrregularTimeSeries (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"StartTime" TEXT NOT NULL,"EndTime" TEXT NOT NULL,"TimeSeriesDataType" TEXT NOT NULL,"DataOrigin" TEXT NOT NULL,"UserDefinedDataOrigin" TEXT,"Unit" TEXT,"Values" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIrregularTimeSeriesValue (id INTEGER PRIMARY KEY, "TimeStamp" TEXT NOT NULL,"ListValues: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcIShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"OverallWidth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"OverallDepth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WebThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"FlangeEdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"FlangeSlope" TEXT);
CREATE TABLE IF NOT EXISTS IfcJunctionBox (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcJunctionBoxType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLaborResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Usage" INTEGER,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcLaborResourceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ResourceType" TEXT,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLagTime (id INTEGER PRIMARY KEY, "Name" TEXT,"DataOrigin" TEXT,"UserDefinedDataOrigin" TEXT,"LagValue" TEXT NOT NULL,"DurationType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLamp (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcLampType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLibraryInformation (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Version" TEXT,"Publisher" TEXT,"VersionDate" TEXT,"Location" TEXT,"Description" TEXT);
CREATE TABLE IF NOT EXISTS IfcLibraryReference (id INTEGER PRIMARY KEY, "Location" TEXT,"Identification" TEXT,"Name" TEXT,"Description" TEXT,"Language?: <type IfcLanguageId" TEXT NOT NULL,"ReferencedLibrary" INTEGER);
CREATE TABLE IF NOT EXISTS IfcLightDistributionData (id INTEGER PRIMARY KEY, "MainPlaneAngle" TEXT NOT NULL,"SecondaryPlaneAngle" TEXT NOT NULL,"LuminousIntensity" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightFixture (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcLightFixtureType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightIntensityDistribution (id INTEGER PRIMARY KEY, "LightDistributionCurve" TEXT NOT NULL,"DistributionData" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightSourceAmbient (id INTEGER PRIMARY KEY, "Name" TEXT,"LightColour" INTEGER NOT NULL,"AmbientIntensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Intensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightSourceDirectional (id INTEGER PRIMARY KEY, "Name" TEXT,"LightColour" INTEGER NOT NULL,"AmbientIntensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Intensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Orientation" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightSourceGoniometric (id INTEGER PRIMARY KEY, "Name" TEXT,"LightColour" INTEGER NOT NULL,"AmbientIntensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Intensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Position" INTEGER NOT NULL,"ColourAppearance" INTEGER,"ColourTemperature" TEXT NOT NULL,"LuminousFlux" TEXT NOT NULL,"LightEmissionSource" TEXT NOT NULL,"LightDistributionDataSource" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightSourcePositional (id INTEGER PRIMARY KEY, "Name" TEXT,"LightColour" INTEGER NOT NULL,"AmbientIntensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Intensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Position" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ConstantAttenuation" TEXT NOT NULL,"DistanceAttenuation" TEXT NOT NULL,"QuadricAttenuation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLightSourceSpot (id INTEGER PRIMARY KEY, "Name" TEXT,"LightColour" INTEGER NOT NULL,"AmbientIntensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Intensity?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Position" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ConstantAttenuation" TEXT NOT NULL,"DistanceAttenuation" TEXT NOT NULL,"QuadricAttenuation" TEXT NOT NULL,"Orientation" INTEGER NOT NULL,"ConcentrationExponent" TEXT,"SpreadAngle: <type IfcPositivePlaneAngleMeasure" TEXT NOT NULL,"BeamWidthAngle: <type IfcPositivePlaneAngleMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLine (id INTEGER PRIMARY KEY, "Pnt" INTEGER NOT NULL,"Dir" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLocalPlacement (id INTEGER PRIMARY KEY, "PlacementRelTo" INTEGER,"RelativePlacement" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcLoop (id INTEGER PRIMARY KEY,);
CREATE TABLE IF NOT EXISTS IfcLShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"Width?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"Thickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"EdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"LegSlope" TEXT);
CREATE TABLE IF NOT EXISTS IfcMapConversion (id INTEGER PRIMARY KEY, "SourceCRS" TEXT NOT NULL,"TargetCRS" INTEGER NOT NULL,"Eastings" TEXT NOT NULL,"Northings" TEXT NOT NULL,"OrthogonalHeight" TEXT NOT NULL,"XAxisAbscissa" TEXT,"XAxisOrdinate" TEXT,"Scale" TEXT);
CREATE TABLE IF NOT EXISTS IfcMappedItem (id INTEGER PRIMARY KEY, "MappingSource" INTEGER NOT NULL,"MappingTarget" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterial (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Category" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialClassificationRelationship (id INTEGER PRIMARY KEY, "MaterialClassifications" TEXT NOT NULL,"ClassifiedMaterial" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialConstituent (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Material" INTEGER NOT NULL,"Fraction?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"Category" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialConstituentSet (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"MaterialConstituents" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialDefinitionRepresentation (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Representations" TEXT NOT NULL,"RepresentedMaterial" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialLayer (id INTEGER PRIMARY KEY, "Material" INTEGER,"LayerThickness: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"IsVentilated" TEXT,"Name" TEXT,"Description" TEXT,"Category" TEXT,"Priority" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialLayerSet (id INTEGER PRIMARY KEY, "MaterialLayers" TEXT NOT NULL,"LayerSetName" TEXT,"Description" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialLayerSetUsage (id INTEGER PRIMARY KEY, "ForLayerSet" INTEGER NOT NULL,"LayerSetDirection" TEXT NOT NULL,"DirectionSense" TEXT NOT NULL,"OffsetFromReferenceLine" TEXT NOT NULL,"ReferenceExtent?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialLayerWithOffsets (id INTEGER PRIMARY KEY, "Material" INTEGER,"LayerThickness: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"IsVentilated" TEXT,"Name" TEXT,"Description" TEXT,"Category" TEXT,"Priority" TEXT,"OffsetDirection" TEXT NOT NULL,"OffsetValues" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialList (id INTEGER PRIMARY KEY, "Materials" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialProfile (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Material" INTEGER,"Profile" INTEGER NOT NULL,"Priority" TEXT,"Category" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialProfileSet (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"MaterialProfiles" TEXT NOT NULL,"CompositeProfile" INTEGER);
CREATE TABLE IF NOT EXISTS IfcMaterialProfileSetUsage (id INTEGER PRIMARY KEY, "ForProfileSet" INTEGER NOT NULL,"CardinalPoint" TEXT,"ReferenceExtent?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialProfileSetUsageTapering (id INTEGER PRIMARY KEY, "ForProfileSet" INTEGER NOT NULL,"CardinalPoint" TEXT,"ReferenceExtent?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ForProfileEndSet" INTEGER NOT NULL,"CardinalEndPoint" TEXT);
CREATE TABLE IF NOT EXISTS IfcMaterialProfileWithOffsets (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Material" INTEGER,"Profile" INTEGER NOT NULL,"Priority" TEXT,"Category" TEXT,"OffsetValues" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialProperties (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Properties" TEXT NOT NULL,"Material" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMaterialRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingMaterial" INTEGER NOT NULL,"RelatedMaterials" TEXT NOT NULL,"Expression" TEXT);
CREATE TABLE IF NOT EXISTS IfcMeasureWithUnit (id INTEGER PRIMARY KEY, "ValueComponent: <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"UnitComponent" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMechanicalFastener (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"NominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"NominalLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcMechanicalFastenerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"NominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"NominalLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMedicalDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcMedicalDeviceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMember (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcMemberStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcMemberType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMetric (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"ConstraintGrade" TEXT NOT NULL,"ConstraintSource" TEXT,"CreatingActor" TEXT,"CreationTime" TEXT,"UserDefinedGrade" TEXT,"Benchmark" TEXT NOT NULL,"ValueSource" TEXT,"DataValue?: <select IfcMetricValueSelect: (<entity IfcAppliedValue> | <entity IfcMeasureWithUnit> | <entity IfcReference> | <entity IfcTable> | <entity IfcTimeSeries> | <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"ReferencePath" INTEGER);
CREATE TABLE IF NOT EXISTS IfcMirroredProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"ParentProfile" INTEGER NOT NULL,"Operator" INTEGER NOT NULL,"Label" TEXT);
CREATE TABLE IF NOT EXISTS IfcMonetaryUnit (id INTEGER PRIMARY KEY, "Currency" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcMotorConnection (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcMotorConnectionType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcObjective (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"ConstraintGrade" TEXT NOT NULL,"ConstraintSource" TEXT,"CreatingActor" TEXT,"CreationTime" TEXT,"UserDefinedGrade" TEXT,"BenchmarkValues" TEXT,"LogicalAggregator" TEXT,"ObjectiveQualifier" TEXT NOT NULL,"UserDefinedQualifier" TEXT);
CREATE TABLE IF NOT EXISTS IfcOccupant (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"TheActor" TEXT NOT NULL,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcOffsetCurve2D (id INTEGER PRIMARY KEY, "BasisCurve" INTEGER NOT NULL,"Distance" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOffsetCurve3D (id INTEGER PRIMARY KEY, "BasisCurve" INTEGER NOT NULL,"Distance" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL,"RefDirection" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOpeningElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcOpeningStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcOpenShell (id INTEGER PRIMARY KEY, "CfsFaces" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOrganization (id INTEGER PRIMARY KEY, "Identification" TEXT,"Name" TEXT NOT NULL,"Description" TEXT,"Roles" TEXT,"Addresses" TEXT);
CREATE TABLE IF NOT EXISTS IfcOrganizationRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingOrganization" INTEGER NOT NULL,"RelatedOrganizations" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOrientedEdge (id INTEGER PRIMARY KEY, "EdgeStart" INTEGER NOT NULL,"EdgeEnd" INTEGER NOT NULL,"EdgeElement" INTEGER NOT NULL,"Orientation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOuterBoundaryCurve (id INTEGER PRIMARY KEY, "Segments" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOutlet (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcOutletType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcOwnerHistory (id INTEGER PRIMARY KEY, "OwningUser" INTEGER NOT NULL,"OwningApplication" INTEGER NOT NULL,"State" TEXT,"ChangeAction" TEXT,"LastModifiedDate" TEXT,"LastModifyingUser" INTEGER,"LastModifyingApplication" INTEGER,"CreationDate" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPath (id INTEGER PRIMARY KEY, "EdgeList" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPcurve (id INTEGER PRIMARY KEY, "BasisSurface" INTEGER NOT NULL,"ReferenceCurve" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPerformanceHistory (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LifeCyclePhase" TEXT NOT NULL,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPermeableCoveringProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"OperationType" TEXT NOT NULL,"PanelPosition" TEXT NOT NULL,"FrameDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FrameThickness?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ShapeAspectStyle" INTEGER);
CREATE TABLE IF NOT EXISTS IfcPermit (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"PredefinedType" TEXT,"Status" TEXT,"LongDescription" TEXT);
CREATE TABLE IF NOT EXISTS IfcPerson (id INTEGER PRIMARY KEY, "Identification" TEXT,"FamilyName" TEXT,"GivenName" TEXT,"MiddleNames" TEXT,"PrefixTitles" TEXT,"SuffixTitles" TEXT,"Roles" TEXT,"Addresses" TEXT);
CREATE TABLE IF NOT EXISTS IfcPersonAndOrganization (id INTEGER PRIMARY KEY, "ThePerson" INTEGER NOT NULL,"TheOrganization" INTEGER NOT NULL,"Roles" TEXT);
CREATE TABLE IF NOT EXISTS IfcPhysicalComplexQuantity (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"HasQuantities" TEXT NOT NULL,"Discrimination" TEXT NOT NULL,"Quality" TEXT,"Usage" TEXT);
CREATE TABLE IF NOT EXISTS IfcPile (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT,"ConstructionType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPileType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPipeFitting (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPipeFittingType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPipeSegment (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPipeSegmentType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPixelTexture (id INTEGER PRIMARY KEY, "RepeatS" TEXT NOT NULL,"RepeatT" TEXT NOT NULL,"Mode" TEXT,"TextureTransform" INTEGER,"Parameter" TEXT,"Width" TEXT NOT NULL,"Height" TEXT NOT NULL,"ColourComponents" TEXT NOT NULL,"Pixel" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPlanarBox (id INTEGER PRIMARY KEY, "SizeInX" TEXT NOT NULL,"SizeInY" TEXT NOT NULL,"Placement" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPlanarExtent (id INTEGER PRIMARY KEY, "SizeInX" TEXT NOT NULL,"SizeInY" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPlane (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPlate (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPlateStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPlateType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPointOnCurve (id INTEGER PRIMARY KEY, "BasisCurve" INTEGER NOT NULL,"PointParameter" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPointOnSurface (id INTEGER PRIMARY KEY, "BasisSurface" INTEGER NOT NULL,"PointParameterU" TEXT NOT NULL,"PointParameterV" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPolygonalBoundedHalfSpace (id INTEGER PRIMARY KEY, "BaseSurface" INTEGER NOT NULL,"AgreementFlag" TEXT NOT NULL,"Position" INTEGER NOT NULL,"PolygonalBoundary" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPolygonalFaceSet (id INTEGER PRIMARY KEY, "Coordinates" INTEGER NOT NULL,"Closed" TEXT,"Faces" TEXT NOT NULL,"PnIndex?: <list [1:?] of <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPolyline (id INTEGER PRIMARY KEY, "Points" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPolyLoop (id INTEGER PRIMARY KEY, "Polygon" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPostalAddress (id INTEGER PRIMARY KEY, "Purpose" TEXT,"Description" TEXT,"UserDefinedPurpose" TEXT,"InternalLocation" TEXT,"AddressLines" TEXT,"PostalBox" TEXT,"Town" TEXT,"Region" TEXT,"PostalCode" TEXT,"Country" TEXT);
CREATE TABLE IF NOT EXISTS IfcPresentationLayerAssignment (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"AssignedItems" TEXT NOT NULL,"Identifier" TEXT);
CREATE TABLE IF NOT EXISTS IfcPresentationLayerWithStyle (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"AssignedItems" TEXT NOT NULL,"Identifier" TEXT,"LayerOn" TEXT NOT NULL,"LayerFrozen" TEXT NOT NULL,"LayerBlocked" TEXT NOT NULL,"LayerStyles" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPresentationStyleAssignment (id INTEGER PRIMARY KEY, "Styles" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcProcedure (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcProcedureType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ProcessType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcProductDefinitionShape (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Representations" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT);
CREATE TABLE IF NOT EXISTS IfcProfileProperties (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"Properties" TEXT NOT NULL,"ProfileDefinition" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcProject (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"LongName" TEXT,"Phase" TEXT,"RepresentationContexts" TEXT,"UnitsInContext" INTEGER);
CREATE TABLE IF NOT EXISTS IfcProjectedCRS (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"GeodeticDatum" TEXT,"VerticalDatum" TEXT,"MapProjection" TEXT,"MapZone" TEXT,"MapUnit" INTEGER);
CREATE TABLE IF NOT EXISTS IfcProjectionElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcProjectLibrary (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"LongName" TEXT,"Phase" TEXT,"RepresentationContexts" TEXT,"UnitsInContext" INTEGER);
CREATE TABLE IF NOT EXISTS IfcProjectOrder (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"PredefinedType" TEXT,"Status" TEXT,"LongDescription" TEXT);
CREATE TABLE IF NOT EXISTS IfcPropertyBoundedValue (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"UpperBoundValue?: <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"LowerBoundValue?: <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"Unit" TEXT,"SetPointValue?: <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPropertyDependencyRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"DependingProperty" INTEGER NOT NULL,"DependantProperty" INTEGER NOT NULL,"Expression" TEXT);
CREATE TABLE IF NOT EXISTS IfcPropertyEnumeratedValue (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"EnumerationValues?: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"EnumerationReference" INTEGER);
CREATE TABLE IF NOT EXISTS IfcPropertyEnumeration (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"EnumerationValues: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"Unit" TEXT);
CREATE TABLE IF NOT EXISTS IfcPropertyListValue (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"ListValues?: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"Unit" TEXT);
CREATE TABLE IF NOT EXISTS IfcPropertyReferenceValue (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"UsageName" TEXT,"PropertyReference" TEXT);
CREATE TABLE IF NOT EXISTS IfcPropertySet (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"HasProperties" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPropertySetTemplate (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"TemplateType" TEXT,"ApplicableEntity" TEXT,"HasPropertyTemplates" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcPropertySingleValue (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"NominalValue?: <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"Unit" TEXT);
CREATE TABLE IF NOT EXISTS IfcPropertyTableValue (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"DefiningValues?: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"DefinedValues?: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"Expression" TEXT,"DefiningUnit" TEXT,"DefinedUnit" TEXT,"CurveInterpolation" TEXT);
CREATE TABLE IF NOT EXISTS IfcProtectiveDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcProtectiveDeviceTrippingUnit (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcProtectiveDeviceTrippingUnitType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcProtectiveDeviceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcProxy (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"ProxyType" TEXT NOT NULL,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcPump (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcPumpType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcQuantityArea (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Unit" INTEGER,"AreaValue" TEXT NOT NULL,"Formula" TEXT);
CREATE TABLE IF NOT EXISTS IfcQuantityCount (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Unit" INTEGER,"CountValue" TEXT NOT NULL,"Formula" TEXT);
CREATE TABLE IF NOT EXISTS IfcQuantityLength (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Unit" INTEGER,"LengthValue" TEXT NOT NULL,"Formula" TEXT);
CREATE TABLE IF NOT EXISTS IfcQuantityTime (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Unit" INTEGER,"TimeValue" TEXT NOT NULL,"Formula" TEXT);
CREATE TABLE IF NOT EXISTS IfcQuantityVolume (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Unit" INTEGER,"VolumeValue" TEXT NOT NULL,"Formula" TEXT);
CREATE TABLE IF NOT EXISTS IfcQuantityWeight (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"Unit" INTEGER,"WeightValue" TEXT NOT NULL,"Formula" TEXT);
CREATE TABLE IF NOT EXISTS IfcRailing (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcRailingType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRamp (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcRampFlight (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcRampFlightType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRampType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRationalBSplineCurveWithKnots (id INTEGER PRIMARY KEY, "Degree" TEXT NOT NULL,"ControlPointsList" TEXT NOT NULL,"CurveForm" TEXT NOT NULL,"ClosedCurve" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL,"KnotMultiplicities" TEXT NOT NULL,"Knots" TEXT NOT NULL,"KnotSpec" TEXT NOT NULL,"WeightsData" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRationalBSplineSurfaceWithKnots (id INTEGER PRIMARY KEY, "UDegree" TEXT NOT NULL,"VDegree" TEXT NOT NULL,"ControlPointsList" TEXT NOT NULL,"SurfaceForm" TEXT NOT NULL,"UClosed" TEXT NOT NULL,"VClosed" TEXT NOT NULL,"SelfIntersect" TEXT NOT NULL,"UMultiplicities" TEXT NOT NULL,"VMultiplicities" TEXT NOT NULL,"UKnots" TEXT NOT NULL,"VKnots" TEXT NOT NULL,"KnotSpec" TEXT NOT NULL,"WeightsData" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRectangleHollowProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"XDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WallThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"InnerFilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"OuterFilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRectangleProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"XDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRectangularPyramid (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"XLength: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YLength: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"Height: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRectangularTrimmedSurface (id INTEGER PRIMARY KEY, "BasisSurface" INTEGER NOT NULL,"U1" TEXT NOT NULL,"V1" TEXT NOT NULL,"U2" TEXT NOT NULL,"V2" TEXT NOT NULL,"Usense" TEXT NOT NULL,"Vsense" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRecurrencePattern (id INTEGER PRIMARY KEY, "RecurrenceType" TEXT NOT NULL,"DayComponent" TEXT,"WeekdayComponent" TEXT,"MonthComponent" TEXT,"Position" TEXT,"Interval" TEXT,"Occurrences" TEXT,"TimePeriods" TEXT);
CREATE TABLE IF NOT EXISTS IfcReference (id INTEGER PRIMARY KEY, "TypeIdentifier" TEXT,"AttributeIdentifier" TEXT,"InstanceName" TEXT,"ListPositions" TEXT,"InnerReference" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRegularTimeSeries (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"Description" TEXT,"StartTime" TEXT NOT NULL,"EndTime" TEXT NOT NULL,"TimeSeriesDataType" TEXT NOT NULL,"DataOrigin" TEXT NOT NULL,"UserDefinedDataOrigin" TEXT,"Unit" TEXT,"TimeStep" TEXT NOT NULL,"Values" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcReinforcementBarProperties (id INTEGER PRIMARY KEY, "TotalCrossSectionArea" TEXT NOT NULL,"SteelGrade" TEXT NOT NULL,"BarSurface" TEXT,"EffectiveDepth" TEXT,"NominalBarDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"BarCount" TEXT);
CREATE TABLE IF NOT EXISTS IfcReinforcementDefinitionProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"DefinitionType" TEXT,"ReinforcementSectionDefinitions" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcReinforcingBar (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"SteelGrade" TEXT,"NominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"CrossSectionArea" TEXT,"BarLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT,"BarSurface" TEXT);
CREATE TABLE IF NOT EXISTS IfcReinforcingBarType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"NominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"CrossSectionArea" TEXT,"BarLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"BarSurface" TEXT,"BendingShapeCode" TEXT,"BendingParameters" TEXT);
CREATE TABLE IF NOT EXISTS IfcReinforcingMesh (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"SteelGrade" TEXT,"MeshLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"MeshWidth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"LongitudinalBarNominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TransverseBarNominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"LongitudinalBarCrossSectionArea" TEXT,"TransverseBarCrossSectionArea" TEXT,"LongitudinalBarSpacing?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TransverseBarSpacing?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcReinforcingMeshType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"MeshLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"MeshWidth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"LongitudinalBarNominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TransverseBarNominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"LongitudinalBarCrossSectionArea" TEXT,"TransverseBarCrossSectionArea" TEXT,"LongitudinalBarSpacing?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TransverseBarSpacing?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"BendingShapeCode" TEXT,"BendingParameters" TEXT);
CREATE TABLE IF NOT EXISTS IfcRelAggregates (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingObject" INTEGER NOT NULL,"RelatedObjects" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToActor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingActor" INTEGER NOT NULL,"ActingRole" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToControl (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingControl" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToGroup (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingGroup" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToGroupByFactor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingGroup" INTEGER NOT NULL,"Factor" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToProcess (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingProcess" TEXT NOT NULL,"QuantityInProcess" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToProduct (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingProduct" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssignsToResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatedObjectsType" TEXT,"RelatingResource" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssociatesApproval (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingApproval" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssociatesClassification (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingClassification" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssociatesConstraint (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"Intent" TEXT,"RelatingConstraint" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssociatesDocument (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingDocument" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssociatesLibrary (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingLibrary" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelAssociatesMaterial (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingMaterial" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelConnectsElements (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ConnectionGeometry" INTEGER,"RelatingElement" INTEGER NOT NULL,"RelatedElement" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelConnectsPathElements (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ConnectionGeometry" INTEGER,"RelatingElement" INTEGER NOT NULL,"RelatedElement" INTEGER NOT NULL,"RelatingPriorities" TEXT NOT NULL,"RelatedPriorities" TEXT NOT NULL,"RelatedConnectionType" TEXT NOT NULL,"RelatingConnectionType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelConnectsPorts (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingPort" INTEGER NOT NULL,"RelatedPort" INTEGER NOT NULL,"RealizingElement" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRelConnectsPortToElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingPort" INTEGER NOT NULL,"RelatedElement" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelConnectsStructuralActivity (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingElement" TEXT NOT NULL,"RelatedStructuralActivity" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelConnectsStructuralMember (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingStructuralMember" INTEGER NOT NULL,"RelatedStructuralConnection" INTEGER NOT NULL,"AppliedCondition" INTEGER,"AdditionalConditions" INTEGER,"SupportedLength" TEXT,"ConditionCoordinateSystem" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRelConnectsWithEccentricity (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingStructuralMember" INTEGER NOT NULL,"RelatedStructuralConnection" INTEGER NOT NULL,"AppliedCondition" INTEGER,"AdditionalConditions" INTEGER,"SupportedLength" TEXT,"ConditionCoordinateSystem" INTEGER,"ConnectionConstraint" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelConnectsWithRealizingElements (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ConnectionGeometry" INTEGER,"RelatingElement" INTEGER NOT NULL,"RelatedElement" INTEGER NOT NULL,"RealizingElements" TEXT NOT NULL,"ConnectionType" TEXT);
CREATE TABLE IF NOT EXISTS IfcRelContainedInSpatialStructure (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedElements" TEXT NOT NULL,"RelatingStructure" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelCoversBldgElements (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingBuildingElement" INTEGER NOT NULL,"RelatedCoverings" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelCoversSpaces (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingSpace" INTEGER NOT NULL,"RelatedCoverings" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelDeclares (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingContext" INTEGER NOT NULL,"RelatedDefinitions" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelDefinesByObject (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingObject" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelDefinesByProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingPropertyDefinition: <select IfcPropertySetDefinitionSelect: (<entity IfcPropertySetDefinition> | <type IfcPropertySetDefinitionSet" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelDefinesByTemplate (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedPropertySets" TEXT NOT NULL,"RelatingTemplate" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelDefinesByType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedObjects" TEXT NOT NULL,"RelatingType" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelFillsElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingOpeningElement" INTEGER NOT NULL,"RelatedBuildingElement" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelFlowControlElements (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedControlElements" TEXT NOT NULL,"RelatingFlowElement" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelInterferesElements (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingElement" INTEGER NOT NULL,"RelatedElement" INTEGER NOT NULL,"InterferenceGeometry" INTEGER,"InterferenceType" TEXT,"Unknown" TEXT);
CREATE TABLE IF NOT EXISTS IfcRelNests (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingObject" INTEGER NOT NULL,"RelatedObjects" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelProjectsElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingElement" INTEGER NOT NULL,"RelatedFeatureElement" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelReferencedInSpatialStructure (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatedElements" TEXT NOT NULL,"RelatingStructure" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelSequence (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingProcess" INTEGER NOT NULL,"RelatedProcess" INTEGER NOT NULL,"TimeLag" INTEGER,"SequenceType" TEXT,"UserDefinedSequenceType" TEXT);
CREATE TABLE IF NOT EXISTS IfcRelServicesBuildings (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingSystem" INTEGER NOT NULL,"RelatedBuildings" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelSpaceBoundary (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingSpace" TEXT NOT NULL,"RelatedBuildingElement" INTEGER NOT NULL,"ConnectionGeometry" INTEGER,"PhysicalOrVirtualBoundary" TEXT NOT NULL,"InternalOrExternalBoundary" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRelSpaceBoundary1stLevel (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingSpace" TEXT NOT NULL,"RelatedBuildingElement" INTEGER NOT NULL,"ConnectionGeometry" INTEGER,"PhysicalOrVirtualBoundary" TEXT NOT NULL,"InternalOrExternalBoundary" TEXT NOT NULL,"ParentBoundary" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRelSpaceBoundary2ndLevel (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingSpace" TEXT NOT NULL,"RelatedBuildingElement" INTEGER NOT NULL,"ConnectionGeometry" INTEGER,"PhysicalOrVirtualBoundary" TEXT NOT NULL,"InternalOrExternalBoundary" TEXT NOT NULL,"ParentBoundary" INTEGER,"CorrespondingBoundary" INTEGER);
CREATE TABLE IF NOT EXISTS IfcRelVoidsElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"RelatingBuildingElement" INTEGER NOT NULL,"RelatedOpeningElement" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcReparametrisedCompositeCurveSegment (id INTEGER PRIMARY KEY, "Transition" TEXT NOT NULL,"SameSense" TEXT NOT NULL,"ParentCurve" INTEGER NOT NULL,"ParamLength" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRepresentationMap (id INTEGER PRIMARY KEY, "MappingOrigin" TEXT NOT NULL,"MappedRepresentation" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcResourceApprovalRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatedResourceObjects" TEXT NOT NULL,"RelatingApproval" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcResourceConstraintRelationship (id INTEGER PRIMARY KEY, "Name" TEXT,"Description" TEXT,"RelatingConstraint" INTEGER NOT NULL,"RelatedResourceObjects" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcResourceTime (id INTEGER PRIMARY KEY, "Name" TEXT,"DataOrigin" TEXT,"UserDefinedDataOrigin" TEXT,"ScheduleWork" TEXT,"ScheduleUsage?: <type IfcPositiveRatioMeasure" TEXT NOT NULL,"ScheduleStart" TEXT,"ScheduleFinish" TEXT,"ScheduleContour" TEXT,"LevelingDelay" TEXT,"IsOverAllocated" TEXT,"StatusTime" TEXT,"ActualWork" TEXT,"ActualUsage?: <type IfcPositiveRatioMeasure" TEXT NOT NULL,"ActualStart" TEXT,"ActualFinish" TEXT,"RemainingWork" TEXT,"RemainingUsage?: <type IfcPositiveRatioMeasure" TEXT NOT NULL,"Completion?: <type IfcPositiveRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRevolvedAreaSolid (id INTEGER PRIMARY KEY, "SweptArea" INTEGER NOT NULL,"Position" INTEGER,"Axis" INTEGER NOT NULL,"Angle" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRevolvedAreaSolidTapered (id INTEGER PRIMARY KEY, "SweptArea" INTEGER NOT NULL,"Position" INTEGER,"Axis" INTEGER NOT NULL,"Angle" TEXT NOT NULL,"EndSweptArea" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRightCircularCone (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"Height: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"BottomRadius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRightCircularCylinder (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"Height: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRoof (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcRoofType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcRoundedRectangleProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"XDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"RoundingRadius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSanitaryTerminal (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSanitaryTerminalType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSeamCurve (id INTEGER PRIMARY KEY, "Curve3D" INTEGER NOT NULL,"AssociatedGeometry" TEXT NOT NULL,"MasterRepresentation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSectionedSpine (id INTEGER PRIMARY KEY, "SpineCurve" INTEGER NOT NULL,"CrossSections" TEXT NOT NULL,"CrossSectionPositions" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSectionProperties (id INTEGER PRIMARY KEY, "SectionType" TEXT NOT NULL,"StartProfile" INTEGER NOT NULL,"EndProfile" INTEGER);
CREATE TABLE IF NOT EXISTS IfcSectionReinforcementProperties (id INTEGER PRIMARY KEY, "LongitudinalStartPosition" TEXT NOT NULL,"LongitudinalEndPosition" TEXT NOT NULL,"TransversePosition" TEXT,"ReinforcementRole" TEXT NOT NULL,"SectionDefinition" INTEGER NOT NULL,"CrossSectionReinforcementDefinitions" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSensor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSensorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcShadingDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcShadingDeviceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcShapeAspect (id INTEGER PRIMARY KEY, "ShapeRepresentations" TEXT NOT NULL,"Name" TEXT,"Description" TEXT,"ProductDefinitional" TEXT NOT NULL,"PartOfProductDefinitionShape" TEXT);
CREATE TABLE IF NOT EXISTS IfcShapeRepresentation (id INTEGER PRIMARY KEY, "ContextOfItems" INTEGER NOT NULL,"RepresentationIdentifier" TEXT,"RepresentationType" TEXT,"Items" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcShellBasedSurfaceModel (id INTEGER PRIMARY KEY, "SbsmBoundary" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSimplePropertyTemplate (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"TemplateType" TEXT,"PrimaryMeasureType" TEXT,"SecondaryMeasureType" TEXT,"Enumerators" INTEGER,"PrimaryUnit" TEXT,"SecondaryUnit" TEXT,"Expression" TEXT,"AccessState" TEXT);
CREATE TABLE IF NOT EXISTS IfcSite (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"LongName" TEXT,"CompositionType" TEXT,"RefLatitude?: <type IfcCompoundPlaneAngleMeasure" TEXT NOT NULL,"RefLongitude?: <type IfcCompoundPlaneAngleMeasure" TEXT NOT NULL,"RefElevation" TEXT,"LandTitleNumber" TEXT,"SiteAddress" INTEGER);
CREATE TABLE IF NOT EXISTS IfcSIUnit (id INTEGER PRIMARY KEY, "Dimensions" INTEGER NOT NULL,"UnitType" TEXT NOT NULL,"Prefix" TEXT,"Name" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSlab (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSlabElementedCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSlabStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSlabType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSlippageConnectionCondition (id INTEGER PRIMARY KEY, "Name" TEXT,"SlippageX" TEXT,"SlippageY" TEXT,"SlippageZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcSolarDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSolarDeviceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSpace (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"LongName" TEXT,"CompositionType" TEXT,"PredefinedType" TEXT,"ElevationWithFlooring" TEXT);
CREATE TABLE IF NOT EXISTS IfcSpaceHeater (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSpaceHeaterType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSpaceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"LongName" TEXT);
CREATE TABLE IF NOT EXISTS IfcSpatialZone (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"LongName" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSpatialZoneType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"LongName" TEXT);
CREATE TABLE IF NOT EXISTS IfcSphere (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSphericalSurface (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStackTerminal (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcStackTerminalType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStair (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcStairFlight (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"NumberOfRisers" TEXT,"NumberOfTreads" TEXT,"RiserHeight?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TreadLength?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcStairFlightType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStairType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralAnalysisModel (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"PredefinedType" TEXT NOT NULL,"OrientationOf2DPlane" INTEGER,"LoadedBy" TEXT,"HasResults" TEXT,"SharedPlacement" INTEGER);
CREATE TABLE IF NOT EXISTS IfcStructuralCurveAction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"DestabilizingLoad" TEXT,"ProjectedOrTrue" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralCurveConnection (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedCondition" INTEGER,"Axis" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralCurveMember (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"PredefinedType" TEXT NOT NULL,"Axis" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralCurveMemberVarying (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"PredefinedType" TEXT NOT NULL,"Axis" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralCurveReaction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralLinearAction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"DestabilizingLoad" TEXT,"ProjectedOrTrue" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"PredefinedType" TEXT NOT NULL,"ActionType" TEXT NOT NULL,"ActionSource" TEXT NOT NULL,"Coefficient" TEXT,"Purpose" TEXT,"SelfWeightCoefficients" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadConfiguration (id INTEGER PRIMARY KEY, "Name" TEXT,"Values" TEXT NOT NULL,"Locations" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadGroup (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"PredefinedType" TEXT NOT NULL,"ActionType" TEXT NOT NULL,"ActionSource" TEXT NOT NULL,"Coefficient" TEXT,"Purpose" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadLinearForce (id INTEGER PRIMARY KEY, "Name" TEXT,"LinearForceX" TEXT,"LinearForceY" TEXT,"LinearForceZ" TEXT,"LinearMomentX" TEXT,"LinearMomentY" TEXT,"LinearMomentZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadPlanarForce (id INTEGER PRIMARY KEY, "Name" TEXT,"PlanarForceX" TEXT,"PlanarForceY" TEXT,"PlanarForceZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadSingleDisplacement (id INTEGER PRIMARY KEY, "Name" TEXT,"DisplacementX" TEXT,"DisplacementY" TEXT,"DisplacementZ" TEXT,"RotationalDisplacementRX" TEXT,"RotationalDisplacementRY" TEXT,"RotationalDisplacementRZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadSingleDisplacementDistortion (id INTEGER PRIMARY KEY, "Name" TEXT,"DisplacementX" TEXT,"DisplacementY" TEXT,"DisplacementZ" TEXT,"RotationalDisplacementRX" TEXT,"RotationalDisplacementRY" TEXT,"RotationalDisplacementRZ" TEXT,"Distortion" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadSingleForce (id INTEGER PRIMARY KEY, "Name" TEXT,"ForceX" TEXT,"ForceY" TEXT,"ForceZ" TEXT,"MomentX" TEXT,"MomentY" TEXT,"MomentZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadSingleForceWarping (id INTEGER PRIMARY KEY, "Name" TEXT,"ForceX" TEXT,"ForceY" TEXT,"ForceZ" TEXT,"MomentX" TEXT,"MomentY" TEXT,"MomentZ" TEXT,"WarpingMoment" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralLoadTemperature (id INTEGER PRIMARY KEY, "Name" TEXT,"DeltaTConstant" TEXT,"DeltaTY" TEXT,"DeltaTZ" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralPlanarAction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"DestabilizingLoad" TEXT,"ProjectedOrTrue" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralPointAction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"DestabilizingLoad" TEXT);
CREATE TABLE IF NOT EXISTS IfcStructuralPointConnection (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedCondition" INTEGER,"ConditionCoordinateSystem" INTEGER);
CREATE TABLE IF NOT EXISTS IfcStructuralPointReaction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralResultGroup (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"TheoryType" TEXT NOT NULL,"ResultForLoadGroup" INTEGER,"IsLinear" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralSurfaceAction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"DestabilizingLoad" TEXT,"ProjectedOrTrue" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralSurfaceConnection (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedCondition" INTEGER);
CREATE TABLE IF NOT EXISTS IfcStructuralSurfaceMember (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"PredefinedType" TEXT NOT NULL,"Thickness?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralSurfaceMemberVarying (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"PredefinedType" TEXT NOT NULL,"Thickness?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStructuralSurfaceReaction (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"AppliedLoad" INTEGER NOT NULL,"GlobalOrLocal" TEXT NOT NULL,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcStyledItem (id INTEGER PRIMARY KEY, "Item" INTEGER,"Styles" TEXT NOT NULL,"Name" TEXT);
CREATE TABLE IF NOT EXISTS IfcStyledRepresentation (id INTEGER PRIMARY KEY, "ContextOfItems" INTEGER NOT NULL,"RepresentationIdentifier" TEXT,"RepresentationType" TEXT,"Items" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSubContractResource (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Usage" INTEGER,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSubContractResourceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ResourceType" TEXT,"BaseCosts" TEXT,"BaseQuantity" INTEGER,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSubedge (id INTEGER PRIMARY KEY, "EdgeStart" INTEGER NOT NULL,"EdgeEnd" INTEGER NOT NULL,"ParentEdge" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceCurve (id INTEGER PRIMARY KEY, "Curve3D" INTEGER NOT NULL,"AssociatedGeometry" TEXT NOT NULL,"MasterRepresentation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceCurveSweptAreaSolid (id INTEGER PRIMARY KEY, "SweptArea" INTEGER NOT NULL,"Position" INTEGER,"Directrix" INTEGER NOT NULL,"StartParam" TEXT,"EndParam" TEXT,"ReferenceSurface" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceFeature (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSurfaceOfLinearExtrusion (id INTEGER PRIMARY KEY, "SweptCurve" INTEGER NOT NULL,"Position" INTEGER,"ExtrudedDirection" INTEGER NOT NULL,"Depth" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceOfRevolution (id INTEGER PRIMARY KEY, "SweptCurve" INTEGER NOT NULL,"Position" INTEGER,"AxisPosition" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceReinforcementArea (id INTEGER PRIMARY KEY, "Name" TEXT,"SurfaceReinforcement1" TEXT,"SurfaceReinforcement2" TEXT,"ShearReinforcement" TEXT);
CREATE TABLE IF NOT EXISTS IfcSurfaceStyle (id INTEGER PRIMARY KEY, "Name" TEXT,"Side" TEXT NOT NULL,"Styles" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceStyleLighting (id INTEGER PRIMARY KEY, "DiffuseTransmissionColour" INTEGER NOT NULL,"DiffuseReflectionColour" INTEGER NOT NULL,"TransmissionColour" INTEGER NOT NULL,"ReflectanceColour" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceStyleRefraction (id INTEGER PRIMARY KEY, "RefractionIndex" TEXT,"DispersionFactor" TEXT);
CREATE TABLE IF NOT EXISTS IfcSurfaceStyleRendering (id INTEGER PRIMARY KEY, "SurfaceColour" INTEGER NOT NULL,"Transparency?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"DiffuseColour?: <select IfcColourOrFactor: (<entity IfcColourRgb> | <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"TransmissionColour?: <select IfcColourOrFactor: (<entity IfcColourRgb> | <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"DiffuseTransmissionColour?: <select IfcColourOrFactor: (<entity IfcColourRgb> | <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"ReflectionColour?: <select IfcColourOrFactor: (<entity IfcColourRgb> | <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"SpecularColour?: <select IfcColourOrFactor: (<entity IfcColourRgb> | <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"SpecularHighlight" TEXT,"ReflectanceMethod" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceStyleShading (id INTEGER PRIMARY KEY, "SurfaceColour" INTEGER NOT NULL,"Transparency?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSurfaceStyleWithTextures (id INTEGER PRIMARY KEY, "Textures" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSweptDiskSolid (id INTEGER PRIMARY KEY, "Directrix" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"InnerRadius?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"StartParam" TEXT,"EndParam" TEXT);
CREATE TABLE IF NOT EXISTS IfcSweptDiskSolidPolygonal (id INTEGER PRIMARY KEY, "Directrix" INTEGER NOT NULL,"Radius: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"InnerRadius?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"StartParam" TEXT,"EndParam" TEXT,"FilletRadius?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSwitchingDevice (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSwitchingDeviceType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcSystem (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSystemFurnitureElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcSystemFurnitureElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTable (id INTEGER PRIMARY KEY, "Name" TEXT,"Rows" TEXT,"Columns" TEXT);
CREATE TABLE IF NOT EXISTS IfcTableColumn (id INTEGER PRIMARY KEY, "Identifier" TEXT,"Name" TEXT,"Description" TEXT,"Unit" TEXT,"ReferencePath" INTEGER);
CREATE TABLE IF NOT EXISTS IfcTableRow (id INTEGER PRIMARY KEY, "RowCells?: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL,"IsHeading" TEXT);
CREATE TABLE IF NOT EXISTS IfcTank (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTankType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTask (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"LongDescription" TEXT,"Status" TEXT,"WorkMethod" TEXT,"IsMilestone" TEXT NOT NULL,"Priority" TEXT,"TaskTime" INTEGER,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTaskTime (id INTEGER PRIMARY KEY, "Name" TEXT,"DataOrigin" TEXT,"UserDefinedDataOrigin" TEXT,"DurationType" TEXT,"ScheduleDuration" TEXT,"ScheduleStart" TEXT,"ScheduleFinish" TEXT,"EarlyStart" TEXT,"EarlyFinish" TEXT,"LateStart" TEXT,"LateFinish" TEXT,"FreeFloat" TEXT,"TotalFloat" TEXT,"IsCritical" TEXT,"StatusTime" TEXT,"ActualDuration" TEXT,"ActualStart" TEXT,"ActualFinish" TEXT,"RemainingTime" TEXT,"Completion?: <type IfcPositiveRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTaskTimeRecurring (id INTEGER PRIMARY KEY, "Name" TEXT,"DataOrigin" TEXT,"UserDefinedDataOrigin" TEXT,"DurationType" TEXT,"ScheduleDuration" TEXT,"ScheduleStart" TEXT,"ScheduleFinish" TEXT,"EarlyStart" TEXT,"EarlyFinish" TEXT,"LateStart" TEXT,"LateFinish" TEXT,"FreeFloat" TEXT,"TotalFloat" TEXT,"IsCritical" TEXT,"StatusTime" TEXT,"ActualDuration" TEXT,"ActualStart" TEXT,"ActualFinish" TEXT,"RemainingTime" TEXT,"Completion?: <type IfcPositiveRatioMeasure" TEXT NOT NULL,"Recurrence" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTaskType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"Identification" TEXT,"LongDescription" TEXT,"ProcessType" TEXT,"PredefinedType" TEXT NOT NULL,"WorkMethod" TEXT);
CREATE TABLE IF NOT EXISTS IfcTelecomAddress (id INTEGER PRIMARY KEY, "Purpose" TEXT,"Description" TEXT,"UserDefinedPurpose" TEXT,"TelephoneNumbers" TEXT,"FacsimileNumbers" TEXT,"PagerNumber" TEXT,"ElectronicMailAddresses" TEXT,"WWWHomePageURL" TEXT,"MessagingIDs" TEXT);
CREATE TABLE IF NOT EXISTS IfcTendon (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"SteelGrade" TEXT,"PredefinedType" TEXT,"NominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"CrossSectionArea" TEXT,"TensionForce" TEXT,"PreStress" TEXT,"FrictionCoefficient?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"AnchorageSlip?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"MinCurvatureRadius?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTendonAnchor (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"SteelGrade" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTendonAnchorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTendonType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"NominalDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"CrossSectionArea" TEXT,"SheathDiameter?: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextLiteral (id INTEGER PRIMARY KEY, "Literal" TEXT NOT NULL,"Placement" TEXT NOT NULL,"Path" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextLiteralWithExtent (id INTEGER PRIMARY KEY, "Literal" TEXT NOT NULL,"Placement" TEXT NOT NULL,"Path" TEXT NOT NULL,"Extent" INTEGER NOT NULL,"BoxAlignment: <type IfcBoxAlignment" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextStyle (id INTEGER PRIMARY KEY, "Name" TEXT,"TextCharacterAppearance" INTEGER,"TextStyle" INTEGER,"TextFontStyle" TEXT NOT NULL,"ModelOrDraughting" TEXT);
CREATE TABLE IF NOT EXISTS IfcTextStyleFontModel (id INTEGER PRIMARY KEY, "Name" TEXT NOT NULL,"FontFamily" TEXT NOT NULL,"FontStyle" TEXT,"FontVariant" TEXT,"FontWeight" TEXT,"FontSize: <select IfcSizeSelect: (<type IfcDescriptiveMeasure: <string>> | <type IfcLengthMeasure: <real>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositiveRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextStyleForDefinedFont (id INTEGER PRIMARY KEY, "Colour" TEXT NOT NULL,"BackgroundColour" TEXT);
CREATE TABLE IF NOT EXISTS IfcTextStyleTextModel (id INTEGER PRIMARY KEY, "TextIndent?: <select IfcSizeSelect: (<type IfcDescriptiveMeasure: <string>> | <type IfcLengthMeasure: <real>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositiveRatioMeasure" TEXT NOT NULL,"TextAlign" TEXT,"TextDecoration" TEXT,"LetterSpacing?: <select IfcSizeSelect: (<type IfcDescriptiveMeasure: <string>> | <type IfcLengthMeasure: <real>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositiveRatioMeasure" TEXT NOT NULL,"WordSpacing?: <select IfcSizeSelect: (<type IfcDescriptiveMeasure: <string>> | <type IfcLengthMeasure: <real>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositiveRatioMeasure" TEXT NOT NULL,"TextTransform" TEXT,"LineHeight?: <select IfcSizeSelect: (<type IfcDescriptiveMeasure: <string>> | <type IfcLengthMeasure: <real>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositiveRatioMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextureCoordinateGenerator (id INTEGER PRIMARY KEY, "Maps" TEXT NOT NULL,"Mode" TEXT NOT NULL,"Parameter" TEXT);
CREATE TABLE IF NOT EXISTS IfcTextureMap (id INTEGER PRIMARY KEY, "Maps" TEXT NOT NULL,"Vertices" TEXT NOT NULL,"MappedTo" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextureVertex (id INTEGER PRIMARY KEY, "Coordinates" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTextureVertexList (id INTEGER PRIMARY KEY, "TexCoordsList" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTimePeriod (id INTEGER PRIMARY KEY, "StartTime" TEXT NOT NULL,"EndTime" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTimeSeriesValue (id INTEGER PRIMARY KEY, "ListValues: <list [1:?] of <select IfcValue: (<select IfcDerivedMeasureValue: (<type IfcAbsorbedDoseMeasure: <real>> | <type IfcAccelerationMeasure: <real>> | <type IfcAngularVelocityMeasure: <real>> | <type IfcAreaDensityMeasure: <real>> | <type IfcCompoundPlaneAngleMeasure: <list [3:4] of <integer>>> | <type IfcCurvatureMeasure: <real>> | <type IfcDoseEquivalentMeasure: <real>> | <type IfcDynamicViscosityMeasure: <real>> | <type IfcElectricCapacitanceMeasure: <real>> | <type IfcElectricChargeMeasure: <real>> | <type IfcElectricConductanceMeasure: <real>> | <type IfcElectricResistanceMeasure: <real>> | <type IfcElectricVoltageMeasure: <real>> | <type IfcEnergyMeasure: <real>> | <type IfcForceMeasure: <real>> | <type IfcFrequencyMeasure: <real>> | <type IfcHeatFluxDensityMeasure: <real>> | <type IfcHeatingValueMeasure: <real>> | <type IfcIlluminanceMeasure: <real>> | <type IfcInductanceMeasure: <real>> | <type IfcIntegerCountRateMeasure: <integer>> | <type IfcIonConcentrationMeasure: <real>> | <type IfcIsothermalMoistureCapacityMeasure: <real>> | <type IfcKinematicViscosityMeasure: <real>> | <type IfcLinearForceMeasure: <real>> | <type IfcLinearMomentMeasure: <real>> | <type IfcLinearStiffnessMeasure: <real>> | <type IfcLinearVelocityMeasure: <real>> | <type IfcLuminousFluxMeasure: <real>> | <type IfcLuminousIntensityDistributionMeasure: <real>> | <type IfcMagneticFluxDensityMeasure: <real>> | <type IfcMagneticFluxMeasure: <real>> | <type IfcMassDensityMeasure: <real>> | <type IfcMassFlowRateMeasure: <real>> | <type IfcMassPerLengthMeasure: <real>> | <type IfcModulusOfElasticityMeasure: <real>> | <type IfcModulusOfLinearSubgradeReactionMeasure: <real>> | <type IfcModulusOfRotationalSubgradeReactionMeasure: <real>> | <type IfcModulusOfSubgradeReactionMeasure: <real>> | <type IfcMoistureDiffusivityMeasure: <real>> | <type IfcMolecularWeightMeasure: <real>> | <type IfcMomentOfInertiaMeasure: <real>> | <type IfcMonetaryMeasure: <real>> | <type IfcPHMeasure: <real>> | <type IfcPlanarForceMeasure: <real>> | <type IfcPowerMeasure: <real>> | <type IfcPressureMeasure: <real>> | <type IfcRadioActivityMeasure: <real>> | <type IfcRotationalFrequencyMeasure: <real>> | <type IfcRotationalMassMeasure: <real>> | <type IfcRotationalStiffnessMeasure: <real>> | <type IfcSectionModulusMeasure: <real>> | <type IfcSectionalAreaIntegralMeasure: <real>> | <type IfcShearModulusMeasure: <real>> | <type IfcSoundPowerLevelMeasure: <real>> | <type IfcSoundPowerMeasure: <real>> | <type IfcSoundPressureLevelMeasure: <real>> | <type IfcSoundPressureMeasure: <real>> | <type IfcSpecificHeatCapacityMeasure: <real>> | <type IfcTemperatureGradientMeasure: <real>> | <type IfcTemperatureRateOfChangeMeasure: <real>> | <type IfcThermalAdmittanceMeasure: <real>> | <type IfcThermalConductivityMeasure: <real>> | <type IfcThermalExpansionCoefficientMeasure: <real>> | <type IfcThermalResistanceMeasure: <real>> | <type IfcThermalTransmittanceMeasure: <real>> | <type IfcTorqueMeasure: <real>> | <type IfcVaporPermeabilityMeasure: <real>> | <type IfcVolumetricFlowRateMeasure: <real>> | <type IfcWarpingConstantMeasure: <real>> | <type IfcWarpingMomentMeasure: <real>>)> | <select IfcMeasureValue: (<type IfcAmountOfSubstanceMeasure: <real>> | <type IfcAreaMeasure: <real>> | <type IfcComplexNumber: <array [1:2] of <real>>> | <type IfcContextDependentMeasure: <real>> | <type IfcCountMeasure: <number>> | <type IfcDescriptiveMeasure: <string>> | <type IfcElectricCurrentMeasure: <real>> | <type IfcLengthMeasure: <real>> | <type IfcLuminousIntensityMeasure: <real>> | <type IfcMassMeasure: <real>> | <type IfcNonNegativeLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcNormalisedRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcNumericMeasure: <number>> | <type IfcParameterValue: <real>> | <type IfcPlaneAngleMeasure: <real>> | <type IfcPositiveLengthMeasure: <type IfcLengthMeasure: <real>>> | <type IfcPositivePlaneAngleMeasure: <type IfcPlaneAngleMeasure: <real>>> | <type IfcPositiveRatioMeasure: <type IfcRatioMeasure: <real>>> | <type IfcRatioMeasure: <real>> | <type IfcSolidAngleMeasure: <real>> | <type IfcThermodynamicTemperatureMeasure: <real>> | <type IfcTimeMeasure: <real>> | <type IfcVolumeMeasure: <real>>)> | <select IfcSimpleValue: (<type IfcBinary: <binary>> | <type IfcBoolean: <boolean>> | <type IfcDate: <string>> | <type IfcDateTime: <string>> | <type IfcDuration: <string>> | <type IfcIdentifier: <string>> | <type IfcInteger: <integer>> | <type IfcLabel: <string>> | <type IfcLogical: <logical>> | <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTopologyRepresentation (id INTEGER PRIMARY KEY, "ContextOfItems" INTEGER NOT NULL,"RepresentationIdentifier" TEXT,"RepresentationType" TEXT,"Items" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcToroidalSurface (id INTEGER PRIMARY KEY, "Position" INTEGER NOT NULL,"MajorRadius: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"MinorRadius: <type IfcPositiveLengthMeasure" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTransformer (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTransformerType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTransportElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTransportElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTrapeziumProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"BottomXDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TopXDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"YDim: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"TopXOffset" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTriangulatedFaceSet (id INTEGER PRIMARY KEY, "Coordinates" INTEGER NOT NULL,"Normals" TEXT,"Closed" TEXT,"CoordIndex: <list [1:?] of <list [3:3] of <type IfcPositiveInteger" TEXT NOT NULL,"PnIndex?: <list [1:?] of <type IfcPositiveInteger" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTrimmedCurve (id INTEGER PRIMARY KEY, "BasisCurve" INTEGER NOT NULL,"Trim1" TEXT NOT NULL,"Trim2" TEXT NOT NULL,"SenseAgreement" TEXT NOT NULL,"MasterRepresentation" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeWidth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WebThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"FlangeEdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"WebEdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"WebSlope" TEXT,"FlangeSlope" TEXT);
CREATE TABLE IF NOT EXISTS IfcTubeBundle (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcTubeBundleType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcTypeObject (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT);
CREATE TABLE IF NOT EXISTS IfcTypeProduct (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcUnitaryControlElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcUnitaryControlElementType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcUnitaryEquipment (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcUnitaryEquipmentType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcUnitAssignment (id INTEGER PRIMARY KEY, "Units" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcUShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeWidth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WebThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"EdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"FlangeSlope" TEXT);
CREATE TABLE IF NOT EXISTS IfcValve (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcValveType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcVector (id INTEGER PRIMARY KEY, "Orientation" INTEGER NOT NULL,"Magnitude" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcVertex (id INTEGER PRIMARY KEY,);
CREATE TABLE IF NOT EXISTS IfcVertexLoop (id INTEGER PRIMARY KEY, "LoopVertex" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcVertexPoint (id INTEGER PRIMARY KEY, "VertexGeometry" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS IfcVibrationIsolator (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcVibrationIsolatorType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcVirtualElement (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT);
CREATE TABLE IF NOT EXISTS IfcVirtualGridIntersection (id INTEGER PRIMARY KEY, "IntersectingAxes" TEXT NOT NULL,"OffsetDistances" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcVoidingFeature (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWall (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWallElementedCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWallStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWallType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcWasteTerminal (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWasteTerminalType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcWindow (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"OverallHeight?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"OverallWidth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT,"PartitioningType" TEXT,"UserDefinedPartitioningType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWindowLiningProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"LiningDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"LiningThickness?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"TransomThickness?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"MullionThickness?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"FirstTransomOffset?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"SecondTransomOffset?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"FirstMullionOffset?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"SecondMullionOffset?: <type IfcNormalisedRatioMeasure" TEXT NOT NULL,"ShapeAspectStyle" INTEGER,"LiningOffset" TEXT,"LiningToPanelOffsetX" TEXT,"LiningToPanelOffsetY" TEXT);
CREATE TABLE IF NOT EXISTS IfcWindowPanelProperties (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"OperationType" TEXT NOT NULL,"PanelPosition" TEXT NOT NULL,"FrameDepth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FrameThickness?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"ShapeAspectStyle" INTEGER);
CREATE TABLE IF NOT EXISTS IfcWindowStandardCase (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"ObjectPlacement" INTEGER,"Representation" INTEGER,"Tag" TEXT,"OverallHeight?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"OverallWidth?: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"PredefinedType" TEXT,"PartitioningType" TEXT,"UserDefinedPartitioningType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWindowStyle (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ConstructionType" TEXT NOT NULL,"OperationType" TEXT NOT NULL,"ParameterTakesPrecedence" TEXT NOT NULL,"Sizeable" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS IfcWindowType (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ApplicableOccurrence" TEXT,"HasPropertySets" TEXT,"RepresentationMaps" TEXT,"Tag" TEXT,"ElementType" TEXT,"PredefinedType" TEXT NOT NULL,"PartitioningType" TEXT NOT NULL,"ParameterTakesPrecedence" TEXT,"UserDefinedPartitioningType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWorkCalendar (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"WorkingTimes" TEXT,"ExceptionTimes" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWorkPlan (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"CreationDate" TEXT NOT NULL,"Creators" TEXT,"Purpose" TEXT,"Duration" TEXT,"TotalFloat" TEXT,"StartTime" TEXT NOT NULL,"FinishTime" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWorkSchedule (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"Identification" TEXT,"CreationDate" TEXT NOT NULL,"Creators" TEXT,"Purpose" TEXT,"Duration" TEXT,"TotalFloat" TEXT,"StartTime" TEXT NOT NULL,"FinishTime" TEXT,"PredefinedType" TEXT);
CREATE TABLE IF NOT EXISTS IfcWorkTime (id INTEGER PRIMARY KEY, "Name" TEXT,"DataOrigin" TEXT,"UserDefinedDataOrigin" TEXT,"RecurrencePattern" INTEGER,"Start" TEXT,"Finish" TEXT);
CREATE TABLE IF NOT EXISTS IfcZone (id INTEGER PRIMARY KEY, "GlobalId" TEXT NOT NULL,"OwnerHistory" INTEGER,"Name" TEXT,"Description" TEXT,"ObjectType" TEXT,"LongName" TEXT);
CREATE TABLE IF NOT EXISTS IfcZShapeProfileDef (id INTEGER PRIMARY KEY, "ProfileType" TEXT NOT NULL,"ProfileName" TEXT,"Position" INTEGER,"Depth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeWidth: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"WebThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FlangeThickness: <type IfcPositiveLengthMeasure" TEXT NOT NULL,"FilletRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL,"EdgeRadius?: <type IfcNonNegativeLengthMeasure" TEXT NOT NULL);
